<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btcari.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABsAAAAbCAYAAACN1PRVAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANqSURBVEhLtVZLTBNRFMVP1IXxCxaFUGmnU6j9zEw7nSlW
        DFFRxE8waAhqjNEVCxOVuFCDUaMLYgyJRjcSY3SjRjdGFxISykeIgNb6iXHhr1IhRm2l0lZr673T1wTG
        aVoQTnLSZN495/S+vrmvWalAMXYDzdqP6FjhBs0K9+DzFvCk1sg7YHlaouo/obXwK2hOaKE5MZ6KENqv
        MVudRDIxaFihBoxCaKjnHCP2ih1d1fXnXPsab3bvPnGls7R6n4u2Ob5JoawQ1XH2eiIdH7SssAUN0Eio
        rOk60zL4pelxJC5nY7t/uKy2rk1vdUhdUqz9ILHIDBqzeQl09BXF5XsOtSmFyFlz9EI71utY8ZfawjPE
        Kj1A0IRC86r17vM9odjlJ2H/cOhH/1VP2KsUlKRz295EICc+IFZpMRMOxHcU1V979BxNPgcCHbFoIN43
        EHTJA0YTt5rmHBHQxvItljzilxpak2DFoCLeKXVx5WlkMPrbHx0J+aXgdGTKNvWinmL4WmKZGvA+bcdi
        W3lVD4p7PwVd2FXr+2C33FiJa3YdaEM9/ObHiWVqQOF+LMZjjuLBQKAdw5rdYZ/cWInlew6TMPEUsUwN
        DWOrwGKjc50HxZ/8QRdsY+RCbzgiN1aiY8vOTtRTjK2OWKaG2sDnQvEfPSeG8B262BceueYOf1QylhNP
        bhG/cgDDyBhLD9hv6dtVHTid0TuWJE4W1MEW+sBmZsItDbSMfasksorDDXdfvlUylvNs69DXZFfjHlsg
        uoNCva3Ed/S2541SQJKnH3zwGcTVr7EeRpw7y2CYRWwyA0XZ58F2PpYM4EXF+Sfv8kyLd2hzXUObnnX4
        sU5r5N7l5OZ7F2SrKolN5sgxGObC6LmeCEywyFriL+ad72joODl8JbLiw+yl+ZcW5+bFF6mWhXO1xbsp
        M79JrVbPIXaZAe8q6PImUOpgVMBP4P1Ciz3ZyXQIa1YVLO+A2hip6SkwmRaS9XFhRoHJpsGRVmjmaYqi
        ZpPnozEdTmNwzJfiRDfeJGR9cgHmXlkYji8PxTA5pGTyUMjY1sLNEf4nkBOfTUmgxipsVAxkhRdTsqVa
        M78BzKX/MGPICk81Gut8UjZ5SBUIz46RksmFUmBGV9BEIQVywjAJe7WUtmaTpalBodGo0pn40sRUycr6
        C/jC7n/qX0gwAAAAAElFTkSuQmCC
</value>
  </data>
</root>