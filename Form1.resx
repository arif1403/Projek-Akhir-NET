<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btcari.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABsAAAAbCAYAAACN1PRVAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAANoSURBVEhLtVZbSBRRGDaT6iG6qqsoLrs7M6uruzv3mW1N
        MMoszRAURAvp8uSDUEnQBSPDHqRAMHxSKupFwaewBy3wmqKpm0lED1lqpoQ5qe3FzO2c2bOh0yy72vrB
        97Ln/77v/LPznzMRgYCRvImg+Ks4xT8lSOEZTgnNgLcNaZwNLG/zVf0nDFYulaD5doIWvYGIk/yQ3sKk
        I8nmoKeEImDkgoZGyubkswt7CyrudZ6vaeo7c6uhJ6PgQifOit/lUJJfwWm+Akk3BgMl5EEDaMTnFPVW
        t818qx3weJWs6ZIWM4vLOoyMTe4So/hLyCI06C2WWCCag+Ks0ssdaiFKFl2v65LDSHFZa+VIZBUcOCXW
        QqHl8HHH/T7nav2wS1pwLQw9HHVPqgX5mZ5/zhdIi8+RVVBEEbQwD0UVj169hSZfJal7deWHd3BqqVMZ
        sJbwUeO0zQO0q4lWawLyCwyDWWBgUDJrl7toGPbM/FqeX3E6JTk4GK2ZuYNydyRXjCwDA8xTISxms/L7
        oRh2A7t68WmxT2msxiMl5R1QD2bwJrIMDFB4ERbD1xyKZySpC4Y1OtzTSmM1ZpVeQWFiFbIMDD3JnoDF
        qfZjo1A8JS11gsfoqRtweZTGarTllfRAPUayZcgyMLQmLg4U/zZSggvO0IPXLufjEfeEmrGS8M1N5uxf
        YBg6xoIDzJi8u/zyOyHNmJ/wZPF1JU4DmyifWxAYSP60LGKExcqWsY9qxkrefTk75+9qw8cWELVAIcHa
        pq81j35QC/CzqvXztEnIeC/XU4IjwmTagWxCA4bxezBKGPDt1OaB55+yy+r2idlTZZUdRtImwTpDKj0e
        o0mc3BetyUE2oSPGZNqN0+ITeceIycwhKYW1j+OgY//hK5MS26LjE+oPxiV4D8TGu+MMKWcxC5er1Wp3
        IbvQAO8qcNU04aQgd/CXpPgThLTqrLy/k0gQ1qhJ0naDoV5FNf1JZvN+tL4hbE8ys3p4pOksHIFh2E70
        +1pEYpS4tG5TtOiANwlaDy+A+aQiDIwDP4qRZAwqCR90JHsUfEq4/wmkxTdbEqhnhJNqgeC/HNuSR2qw
        cNn+b5h1pIQRvZ7Zi8rCh0CBoMMbqCS8UAsM6QraLGAgRvOLKOxdPMFEo6WtgS4tTYObuQzfqRIR8Qe2
        EO4FQPoo1gAAAABJRU5ErkJggg==
</value>
  </data>
</root>