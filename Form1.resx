<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btcari.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABsAAAAbCAYAAACN1PRVAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAANpSURBVEhLtVZbSBRhGDWT6iG6ul5QXNyZWXV1d247l00T
        jDJLMwQF0UKknnwQKomoMCzsQXwQrJ4UiXox8KkLlAXeNU0zk4gestRMCW3ysu6Kaf83/hs6zbKr6YHz
        sv93zplvdr5vJsAbSEa0mFnxMsWKD82M9JhipUeIZUSC4EDH21aq/hMELcSbObHRzMnL3kgxQq/Jxidh
        ycZgYqVcihbmwTCGcTjFtJz27JLK5sKK+s4zN2rakrPPNVN2aUoNpYVFihNLsHR9IFgpEwzASEzPbS9/
        Pv6jqtu9rGVFizKTklfUFMM71C5JVryALfyDyWYLIVhhEsSpBReb9EK0zL1a3QL1BC0vGGmBwVa+QbFy
        FQhth4/3V3bMLd3tcyrT89O9dQOuEb0gD5OyCtVAkpOfYSufCDJz0k8QldR1vAeT74rSurT4a7lndLZZ
        G7CacKtJzuFG2qVImo7Aft5BWCUegmL5RLWLml73+IJ7atHpVNRgX7SlZPSo3TFCHrb0DjRPOVBsT83q
        AjF0A129/DLTqTXW45H84ibQoxm8ji29AxWeh2J4zEE8rigtEFbb7xrTGusxteASDpNvYkvvMDH2E1Bs
        STw2AOJRZbYZ3UZ39WunW2usR0dmfhvoScZehC29w2gRwlDx7xhGnIcZuvPG6bzf5xrWM9YSntxYIfEb
        hOE15htoMNWryyq+5deMeQibRQ2i5TFkE7Ti5gMEI55WRbw4U9ow+FnPWMvbryYmPV2te20hUYMqtMtj
        V+oHPukFeFj25OuYRUr+CPVmVuoPsFh2YBv/QJLiHpKVusEABhX2n7bL8sbhiVNFpU0xtEOBOiKeGzKE
        RI7sCw5Nxzb+w2Cx7KY4+YF6xZix/CEljk8cIlHHnuWrkpVfBIdH3DsYFrF8wBDmCiPizpI2IcNoNO7C
        dv4B3lUUI9ZTtKR28Je0PIdCnkbToqeTQBRWGxplbEVDvaTWMHJXlNW6H5+vC9ujrHYTrLRom2AmSXIn
        /n01AglWnl1zUZzcD28SfL65QOYjmjDYlQMkwxhwyeYhmrEfRZ8Srn8COfndlgSaeOmkXiD6Lwe35JYS
        NiHN8w2zhqz01mTi9+KyzYO3QNThNVyyudAL9OsVtFFAIMEJMzjsQ7iZD8ZHW4PohIRQyiokr2yVgIA/
        y+vtvBTBh6oAAAAASUVORK5CYII=
</value>
  </data>
</root>