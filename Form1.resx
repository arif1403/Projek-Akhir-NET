<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btcari.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABsAAAAbCAYAAACN1PRVAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAANrSURBVEhLtVZdSFNhGF4W1UX0O5thOHZ+Nl3u7Pyfs1ZC
        UfZfCAaihUhdeSFUElHRL3VRXQhKV4lEXVTQVRSRBVOzpLKWRUQXWWpLCeukc25hru89fos8nbFZ84Hn
        Zt/7PM95z877nmNJBoqV3U5OPkhz8lUnq9yiOeUG4kmyUPKh4xkTVf8J0iutcPJys5NX48lIs1InwQir
        sOTfQHBKGe0VR8HQ5fVF5I0720trL7RUnbv+eNfxSw+LSve00KL8VQ9lxDGal2uxdGogOWU7GICRvKWs
        /czd/i91T2JxI8+1asNryqsDLsGnd0lx8j5skR4IhllKcuIgiIsr9wfMQowsO1zfCvUEo/6weyUWW6UG
        zal1IGRWbwiebw+PNzyPaEOjQ51NXdFes6AEV5VU6YEUr97BVikxy8kr30BU2/ToFZh81rS28bHv8ad9
        4RZjwJ+EW03yvhjSji/3enOxX3KQHkWAoHzer3dxqTPWH4sOjkUimh6cisyarU/17lipHFsmB5qnnVAs
        Fpd0gBi6ga7ufxh+bDQ249qKmgDo0QwexZbJgQr3QjE85iDu17RWCGsMRkNGYzMWVx7AYeopbJkcBCtu
        gmK3f30XiPu0cAu6jbH6jpGY0diMvu0VD0FPsWI1tkwOu1vKQcU/XV5pFGao4dlI5PLzaI+ZsZHw5OZL
        /k8QhtdYaqDB1K+upOZ0WjOWIGwWPYhRQ8hm1oRbCpCsvANEhCANH7v5+r2ZsZFnHwwMJrqa8tpCopsg
        pEQ1dOha1zuzgARP3PoYcitFb6HeySlBi9s9G9ukB4qS51Oc8gQMYFBh/xm7PNPcM7Ct+ljAxfg0vW4F
        3529dHnvQqttC7ZJH9lu9zyaV6/oV4yZL6zUCgR/N4k6TixfnZx6z7os9+KSnNz4YqstmkMW7KYYaavd
        bp+L7dIDvKtoVr5OM4rewW8y6ggKue3wyolOslBYoy3P3oaGelyvYdWOPI9nET6fEmbmeUQCVpqDkZwU
        Rc3Bv/+JLIJTw5MuileD8CbB55kFMu81hMGu7KJYNhuXZA4OVlyHPiWifwXy6stpCSQEZbNZIPovX0/L
        LSUZaWPiG2YSOeUFQQgLcFnmkCwQdXgEl2QWZoFpvYL+FRBI8NIwDnuzzClY8dH0wFFYaKM9UtHEVrFY
        fgFpCe2JbVJOEwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>